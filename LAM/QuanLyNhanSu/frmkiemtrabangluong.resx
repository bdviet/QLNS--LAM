<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdthoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAD/gAA
        AxEBpYrpGQAAAXVJREFUOE+lk8tKw1AQhuN7+gwqbhUJ4kItimCEQEqbRqukRCFpjAkWTauLeEHTpe4U
        ESwIvsHYf3TiiZdFMPAzucx88585JxNWM9b+dQFQRbOLJtU2PLLsmLh51WJr55Dm9cY3AGifxL+A0wtb
        ZDYC8v0+BeE56WsObZo+aTUjIK+blbTdGXzYVJaH5Jm5JgPwLR/eMUQ7TnN6eBwVehm9ERSf5D/AaAYn
        KLTdhKUhEYCn51cuVAUnSEKE4EJf7RBAAmEH2fU9z0AKvP2U7fcHQ3LHAAjWW60ux5V1l5cBsQMUn6a3
        VK8fcBLUbkcsFYDv/tEVO5icWv4CoDMSDWOPhWkD4jhh0R2d7d2YoigrivkcwIEKEBdqZxQnyQXPAxEO
        ZIcKAJKks1jHuzA84yII0DS9YQBySw5kSLApQ5POvd4lYaAYLmLJQTQmYwlIFtuI0lmKUYgcBiiHTMO+
        6ksO7y9HucezImydPOM8FDOo8jP9lvsOBwGVUy20I9kAAAAASUVORK5CYII=
</value>
  </data>
  <data name="cmdkiemtra.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALEwAA
        CxMBAJqcGAAAAptJREFUOE+Vkl1IU2EYx0/hRQRReCdGEQRBF94UdlNERBQsUaLok8TwQmRWw7A5NZnz
        s/AjPyDaRR+TUEPKyI9j+zhTy8853TQ15+rQds7m2Tpn5+zsnLOz7e11jRC66nfxXDzv8+f9P//33QEA
        QP4LhuV5AMIJAGsEABEAGYBYskYBEADgk0dSHEhJkKr23pudzvKe1aYhvAMj28epRkug1rSpHSbK332/
        a1gp6LJde+o4cKZ4VxJEVW9QtCwNLtEfvnIYLs34E2++xRtmo4/GuLKhTcM09WqCOFtvRzKvpIxr2nqO
        Vdtyu5ZvdOPFH3/pJiOt80L1pFAyyuX3kbdeunJaF46rF/acLzipOYFkIMjIqJEKST5a8DOinxE8FEcE
        eV+QJ4NhIhj+SbHkpoA6p9qnnwMQL/1UimAWCwzqD3FZBNGoLAoJSY5LoiwJMATUNtAyWTvvm+3H+7PK
        sxAMw+Cox+OhaVoQhBAbqrfqOqeao4IMJPDFjVV+Vvauv6hbrEgv3Lu1htVqhQKHw+H3+SN85HJPXt7A
        uZKx669XOyZ+jFYu3n6yorrnyM1+fDi1tMViSSQSTqeT8BIRTmgcbEjv2HkKzcgZP3hpZn/+8pEL8/vq
        VgqbG1vTkLQtjdlslmXZbrfjOM4wjEzH9MPPjvbtzp5Frq7vubOReX/kosfl01bVpG4wmUzQ+tzcnNvt
        pigqEKBCZNiAdueYD1Xgpw22NhKn6CBT9rAsJTAajTzPQ4HL5SJJkiAI0kfSZOitua/pfQ3u8nIsB9Hp
        dCkBiqJwaRjRdliWZQKh9eWNtbU1r9cLB7RabUqg1+vVavWDJKXbUKlUSqWyqKgI9jQajUKhyEyCQD+i
        KMJvGP0HGEYsFoNtOPD3cX8D69P1athNwZgAAAAASUVORK5CYII=
</value>
  </data>
</root>